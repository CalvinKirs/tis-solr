<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="work_flow_publish_history" >
  <resultMap id="ibatorgenerated_BaseResultMap" class="com.qlangtech.tis.workflow.pojo.WorkFlowPublishHistory" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="op_user_id" property="opUserId" jdbcType="INTEGER" />
    <result column="op_user_name" property="opUserName" jdbcType="VARCHAR" />
    <result column="workflow_id" property="workflowId" jdbcType="INTEGER" />
    <result column="workflow_name" property="workflowName" jdbcType="VARCHAR" />
    <result column="publish_state" property="publishState" jdbcType="TINYINT" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="git_sha1" property="gitSha1" jdbcType="VARCHAR" />
    <result column="in_use" property="inUse" jdbcType="BIT" />
    <result column="op_time" property="opTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ibatorgenerated_ResultMapWithBLOBs" class="com.qlangtech.tis.workflow.pojo.WorkFlowPublishHistory" extends="work_flow_publish_history.ibatorgenerated_BaseResultMap" >
    <result column="publish_reason" property="publishReason" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="ibatorgenerated_Example_Where_Clause" >
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="ibatorgenerated_selectByExampleWithBLOBs" resultMap="ibatorgenerated_ResultMapWithBLOBs" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowPublishHistoryCriteria" >
    select id, create_time, op_user_id, op_user_name, workflow_id, workflow_name, publish_state,
      type, git_sha1, in_use, op_time, publish_reason
    from work_flow_publish_history
    <isParameterPresent >
      <include refid="work_flow_publish_history.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="ibatorgenerated_selectByExample" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowPublishHistoryCriteria" >
    select aa.id, create_time, op_user_id, op_user_name, workflow_id, workflow_name, publish_state,
      type, git_sha1, in_use, op_time
     from ( select id from work_flow_publish_history
    <isParameterPresent >
      <include refid="work_flow_publish_history.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
      limit #skip#,#pageSize#
    </isParameterPresent>
       ) bb inner join work_flow_publish_history aa on aa.id=bb.id
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" resultMap="ibatorgenerated_ResultMapWithBLOBs" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowPublishHistory" >
    select id, create_time, op_user_id, op_user_name, workflow_id, workflow_name, publish_state,
      type, git_sha1, in_use, op_time, publish_reason
    from work_flow_publish_history
    where id = #id:INTEGER#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowPublishHistory" >
    delete from work_flow_publish_history
    where id = #id:INTEGER#
  </delete>
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowPublishHistoryCriteria" >
    delete from work_flow_publish_history
    <include refid="work_flow_publish_history.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowPublishHistory" >
    insert into work_flow_publish_history (id, create_time, op_user_id, op_user_name, workflow_id,
      workflow_name, publish_state, type, git_sha1, in_use, op_time, publish_reason)
    values (#id:INTEGER#, #createTime:TIMESTAMP#, #opUserId:INTEGER#, #opUserName:VARCHAR#,
      #workflowId:INTEGER#, #workflowName:VARCHAR#, #publishState:TINYINT#, #type:TINYINT#,
      #gitSha1:VARCHAR#, #inUse:BIT#, #opTime:TIMESTAMP#, #publishReason:LONGVARCHAR#)
    <selectKey resultClass="java.lang.Integer" >
      SELECT LAST_INSERT_ID();
    </selectKey>
  </insert>
  <insert id="ibatorgenerated_insertSelective" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowPublishHistory" >
    insert into work_flow_publish_history
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        id
      </isNotNull>
      <isNotNull prepend="," property="createTime" >
        create_time
      </isNotNull>
      <isNotNull prepend="," property="opUserId" >
        op_user_id
      </isNotNull>
      <isNotNull prepend="," property="opUserName" >
        op_user_name
      </isNotNull>
      <isNotNull prepend="," property="workflowId" >
        workflow_id
      </isNotNull>
      <isNotNull prepend="," property="workflowName" >
        workflow_name
      </isNotNull>
      <isNotNull prepend="," property="publishState" >
        publish_state
      </isNotNull>
      <isNotNull prepend="," property="type" >
        type
      </isNotNull>
      <isNotNull prepend="," property="gitSha1" >
        git_sha1
      </isNotNull>
      <isNotNull prepend="," property="inUse" >
        in_use
      </isNotNull>
      <isNotNull prepend="," property="opTime" >
        op_time
      </isNotNull>
      <isNotNull prepend="," property="publishReason" >
        publish_reason
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        #id:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="createTime" >
        #createTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="opUserId" >
        #opUserId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="opUserName" >
        #opUserName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="workflowId" >
        #workflowId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="workflowName" >
        #workflowName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="publishState" >
        #publishState:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="type" >
        #type:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="gitSha1" >
        #gitSha1:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="inUse" >
        #inUse:BIT#
      </isNotNull>
      <isNotNull prepend="," property="opTime" >
        #opTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="publishReason" >
        #publishReason:LONGVARCHAR#
      </isNotNull>
      )
    </dynamic>
    <selectKey resultClass="java.lang.Integer" >
      SELECT LAST_INSERT_ID();
    </selectKey>
  </insert>
  <select id="ibatorgenerated_countByExample" parameterClass="com.qlangtech.tis.workflow.pojo.WorkFlowPublishHistoryCriteria" resultClass="java.lang.Integer" >
    select count(*) from work_flow_publish_history
    <include refid="work_flow_publish_history.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective" >
    update work_flow_publish_history
    <dynamic prepend="set" >
      <isNotNull prepend="," property="record.id" >
        id = #record.id:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.createTime" >
        create_time = #record.createTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.opUserId" >
        op_user_id = #record.opUserId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.opUserName" >
        op_user_name = #record.opUserName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.workflowId" >
        workflow_id = #record.workflowId:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.workflowName" >
        workflow_name = #record.workflowName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.publishState" >
        publish_state = #record.publishState:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.type" >
        type = #record.type:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.gitSha1" >
        git_sha1 = #record.gitSha1:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.inUse" >
        in_use = #record.inUse:BIT#
      </isNotNull>
      <isNotNull prepend="," property="record.opTime" >
        op_time = #record.opTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.publishReason" >
        publish_reason = #record.publishReason:LONGVARCHAR#
      </isNotNull>
    </dynamic>
    <isParameterPresent >
      <include refid="work_flow_publish_history.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExampleWithBLOBs" >
    update work_flow_publish_history
    set id = #record.id:INTEGER#,
      create_time = #record.createTime:TIMESTAMP#,
      op_user_id = #record.opUserId:INTEGER#,
      op_user_name = #record.opUserName:VARCHAR#,
      workflow_id = #record.workflowId:INTEGER#,
      workflow_name = #record.workflowName:VARCHAR#,
      publish_state = #record.publishState:TINYINT#,
      type = #record.type:TINYINT#,
      git_sha1 = #record.gitSha1:VARCHAR#,
      in_use = #record.inUse:BIT#,
      op_time = #record.opTime:TIMESTAMP#,
      publish_reason = #record.publishReason:LONGVARCHAR#
    <isParameterPresent >
      <include refid="work_flow_publish_history.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample" >
    update work_flow_publish_history
    set id = #record.id:INTEGER#,
      create_time = #record.createTime:TIMESTAMP#,
      op_user_id = #record.opUserId:INTEGER#,
      op_user_name = #record.opUserName:VARCHAR#,
      workflow_id = #record.workflowId:INTEGER#,
      workflow_name = #record.workflowName:VARCHAR#,
      publish_state = #record.publishState:TINYINT#,
      type = #record.type:TINYINT#,
      git_sha1 = #record.gitSha1:VARCHAR#,
      in_use = #record.inUse:BIT#,
      op_time = #record.opTime:TIMESTAMP#
    <isParameterPresent >
      <include refid="work_flow_publish_history.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
</sqlMap>
