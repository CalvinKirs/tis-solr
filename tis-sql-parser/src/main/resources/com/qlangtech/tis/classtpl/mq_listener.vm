package com.qlangtech.tis.realtime.transfer.${config.collection};

import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.caseIfFunc;
import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.collect_list;
import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.collect_set;
import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.concat_ws;
import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.count;
import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.defaultDoubleVal;
import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.defaultVal;
import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.getArrayIndexProp;
import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.get_json_object;
import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.min;
import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.op_and;
import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.round;
import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.split;
import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.sum;
import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.typeCast;
import static com.qlangtech.tis.realtime.transfer.core.FunctionUtils.regexp;
import static com.taobao.terminator.wangjubao.jingwei.Alias.Builder.$;

import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.concurrent.Callable;
import java.util.concurrent.TimeUnit;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;

import com.qlangtech.tis.cardcenter.dao.IComDfireTisCardcenterDAOFacade;
import com.qlangtech.tis.realtime.shop.dao.IMallShopDAO;
import com.qlangtech.tis.realtime.transfer.BasicPojoConsumer;
import com.qlangtech.tis.realtime.transfer.IPk;
import com.qlangtech.tis.realtime.transfer.IRowValueGetter;
import com.qlangtech.tis.realtime.transfer.ITable;
import com.qlangtech.tis.realtime.transfer.core.BasicRuleDrivenListener;
import com.qlangtech.tis.realtime.transfer.core.FunctionUtils.Case;
import com.qlangtech.tis.realtime.transfer.core.FunctionUtils.IDoubleValGetter;
import com.qlangtech.tis.realtime.transfer.core.FunctionUtils.IValGetter;
import com.qlangtech.tis.realtime.transfer.impl.DefaultPojo;
import com.google.common.cache.Cache;
import com.google.common.cache.CacheBuilder;
import com.google.common.collect.Maps;
import com.google.common.util.concurrent.RateLimiter;

import com.taobao.terminator.pubhook.common.Nullable;
import com.taobao.terminator.wangjubao.jingwei.AliasList;
import com.taobao.terminator.wangjubao.jingwei.AliasList.BuilderList;
import com.twodfire.async.message.client.sender.SendManager;
import com.qlangtech.tis.realtime.order.dao.IOrder2DAOFacade;
import com.qlangtech.tis.ibatis.RowMap;

#foreach($i in $config.entitiesList  )
import com.qlangtech.tis.realtime.${i.javaPropDbName}.pojo.${i.javaPropTableName}Criteria;
import com.qlangtech.tis.realtime.${i.javaPropDbName}.pojo.${i.javaPropTableName};
#end 

#foreach($i in $config.dumpTables  )
import com.qlangtech.tis.realtime.${i.javaPropDbName}.pojo.${i.javaPropTableName}ColEnum;
#end 

public class ${config.javaName}Listener extends BasicRuleDrivenListener {

    private static final Logger log = LoggerFactory.getLogger(${config.javaName}Listener.class);
    public static final String PK_TOTALPAY_ID = "totalpay_id";
    private static final int CACHE_LIMIT = 6000;

    private static final int ONE_DAY = 24 * 3600;// excess time to redis keys.

    private SendManager topicSender;

    // add baisui 20190413
    private IMallShopDAO mallShopDAO;

    @Override
    protected RateLimiter createProcessRate() {
        return RateLimiter.create(600);
    }

    private static final Cache<String/* orderid */, WithMallPk/* totalpayid */> ordersCache = CacheBuilder.newBuilder()
            .maximumSize(CACHE_LIMIT).expireAfterWrite(3, TimeUnit.MINUTES).build();

    private static final Cache<String/* entityid */, ShoppingMallId/* mallid */> mallMapCache = CacheBuilder
            .newBuilder().maximumSize(CACHE_LIMIT).expireAfterWrite(1, TimeUnit.HOURS).build();

    private static final class NullCompositePK extends WithMallPk implements Nullable {
        public NullCompositePK() {
            super("null", "null", ShoppingMallId.NULL);
        }
    }

    private static final NullCompositePK NULL_PK = new NullCompositePK();

    public static final String TAB_PAY = "payinfo";
    public static final String TAB_TOTALPAY = "totalpayinfo";
    public static final String TAB_ORDERINFO = "orderdetail";
    public static final String TAB_INSTANCE = "instancedetail";
    public static final String TAB_SPECIALFEE = "specialfee";
    // private static final String COLLECTION_NAME = "search4totalpay";

    public static final String TAB_SERVICE_BILL = "servicebillinfo";
    public static final String TAB_ORDER_BILL = "order_bill";
    // ▼▼▼▼▼ add by baisui 20170815 企业卡支持
    public static final String TAB_ENT_EXPENSE = "ent_expense";
    public static final String TAB_ENT_EXPENSE_ORDER = "ent_expense_order";
    // 提供外卖物流人员电话号码信息
    public static final String TAB_TAKEOUT_ORDER_EXTRA = "takeout_order_extra";
    // ▲▲▲▲▲ end 20170815
    private static final Set<String> TABLE_FOCUSE;

    static {
        TABLE_FOCUSE = new HashSet<String>();
        TABLE_FOCUSE.add(TAB_PAY);
        TABLE_FOCUSE.add(TAB_TOTALPAY);
        TABLE_FOCUSE.add(TAB_ORDERINFO);
        TABLE_FOCUSE.add(TAB_INSTANCE);
        TABLE_FOCUSE.add(TAB_SPECIALFEE);

        TABLE_FOCUSE.add(TAB_SERVICE_BILL);
        TABLE_FOCUSE.add(TAB_ORDER_BILL);

        TABLE_FOCUSE.add(TAB_ENT_EXPENSE);
        TABLE_FOCUSE.add(TAB_ENT_EXPENSE_ORDER);
        // 对应:courier_phone 字段
        TABLE_FOCUSE.add(TAB_TAKEOUT_ORDER_EXTRA);
    }

    @Override
    protected void processColsMeta(BuilderList builder) {
       
${config.colsMetaBuilderList}

    }


#foreach($i   in   $config.mapDataMethodCreatorList  ) 
 $i.generateMapDataMethodBody
#end 


    @Override
    protected DefaultPojo createRowsWrapper() {
        return new TotalpayWrapper(this);
    }

    private static final int NUM_CONSUME_NUM_5 = 5;

    @Override
    protected int getConsumeNum() {
        return NUM_CONSUME_NUM_5;
    }

    @Override
    protected BasicPojoConsumer createPojoConsumer() {
        PojoConsumer pojoConsumer = new PojoConsumer(this, this.orderDaoFacade, this.cardcenterDaoFacade// , this.jedis
                , this.tabColumnMetaMap);
       // pojoConsumer.setCardDAO(this.getCardDAO());
      //  pojoConsumer.setCustomerDAO(this.getCustomerDAO());
        return pojoConsumer;
    }

    private static final String ENTITY_ID = "entity_id";
    private static final String KEY_TEST_KEY = "testskip";

    private IOrder2DAOFacade orderDaoFacade;
    
    private com.qlangtech.tis.realtime.cardcenter.dao.ICardcenter0DAOFacade cardcenterDaoFacade;
    private com.qlangtech.tis.realtime.member.dao.IMember1DAOFacade memberDaoFacade;
    private com.qlangtech.tis.realtime.shop.dao.IShopDAOFacade shopDaoFacade;

    @Override
    public Set<String> getTableFocuse() {
        return TABLE_FOCUSE;
    }

    private static final String KEY_FIELD_RECEIVE_AMOUNT = "recieve_amount";
    private static final Set<String> KEY_FIELD_RECEIVE_AMOUNT_SET = Collections.singleton(KEY_FIELD_RECEIVE_AMOUNT);
    private static final String KEY_FIELD_STATUS = "status";
    private static final Set<String> KEY_FIELD_STATUS_SET = Collections.singleton(KEY_FIELD_STATUS);

    private static final String KEY_FIELD_INSTANCE_FEE = "fee";
    private static final String KEY_FIELD_IS_VALID = "is_valid";
    private static final Set<String> KEY_FIELD_IS_VALID_SET = Collections.singleton(KEY_FIELD_IS_VALID);

    private static final long EXPIRE_TIME_10_MIN = 10 * 60 * 1000;

    @Override
    protected void pushPojo2Queue(IPk pk, ITable table) throws InterruptedException {
        super.pushPojo2Queue(pk, table);

    }

    public void setTopicSender(SendManager topicSender) {
        this.topicSender = topicSender;
    }

    @Autowired
    public void setMallShopDAO(IMallShopDAO mallShopDAO) {
        this.mallShopDAO = mallShopDAO;
    }

}
