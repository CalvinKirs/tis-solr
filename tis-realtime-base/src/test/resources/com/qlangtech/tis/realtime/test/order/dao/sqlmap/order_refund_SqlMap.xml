<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="order_refund" >
  <resultMap id="ibatorgenerated_BaseResultMap" class="com.qlangtech.tis.realtime.test.order.pojo.OrderRefund" >
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="entity_id" property="entityId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="refund_from" property="refundFrom" jdbcType="TINYINT" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="op_user_id" property="opUserId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="op_time" property="opTime" jdbcType="BIGINT" />
    <result column="last_ver" property="lastVer" jdbcType="INTEGER" />
    <result column="is_valid" property="isValid" jdbcType="TINYINT" />
    <result column="ext" property="ext" jdbcType="VARCHAR" />
    <result column="finish_time" property="finishTime" jdbcType="BIGINT" />
    <result column="sub_status" property="subStatus" jdbcType="TINYINT" />
    <result column="refund_code" property="refundCode" jdbcType="VARCHAR" />
    <result column="max_refund_fee" property="maxRefundFee" jdbcType="INTEGER" />
    <result column="apply_refund_fee" property="applyRefundFee" jdbcType="INTEGER" />
    <result column="reason_type" property="reasonType" jdbcType="TINYINT" />
    <result column="apply_desc" property="applyDesc" jdbcType="VARCHAR" />
    <result column="reject_desc" property="rejectDesc" jdbcType="VARCHAR" />
    <result column="pic_evidence" property="picEvidence" jdbcType="VARCHAR" />
    <result column="apply_user_id" property="applyUserId" jdbcType="VARCHAR" />
    <result column="timed_task_json" property="timedTaskJson" jdbcType="VARCHAR" />
    <result column="need_audit" property="needAudit" jdbcType="TINYINT" />
    <result column="refund_scene" property="refundScene" jdbcType="SMALLINT" />
    <result column="order_from" property="orderFrom" jdbcType="SMALLINT" />
    <result column="order_kind" property="orderKind" jdbcType="SMALLINT" />
    <result column="liquidated_damages_fee" property="liquidatedDamagesFee" jdbcType="INTEGER" />
    <result column="waitingorder_id" property="waitingorderId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="ibatorgenerated_Example_Where_Clause" >
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="ibatorgenerated_selectByExample" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.OrderRefundCriteria" >
    select aa.id AS identity_id, order_id, refund_from, reason, op_user_id, status, create_time,
      op_time, last_ver, is_valid, ext, finish_time, sub_status, refund_code, max_refund_fee,
      apply_refund_fee, reason_type, apply_desc, reject_desc, pic_evidence, apply_user_id,
      timed_task_json, need_audit, refund_scene, order_from, order_kind, liquidated_damages_fee,
      waitingorder_id
     from ( select id from order_refund 
    <isParameterPresent >
      <include refid="order_refund.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
      limit #skip#,#pageSize#
    </isParameterPresent>
       ) bb inner join order_refund aa on aa.id=bb.id
  </select>
  <select id="ibatorgenerated_selectTargetColsByExample" resultClass="com.qlangtech.tis.ibatis.RowMap" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.OrderRefundCriteria" >
    select aa.id AS id
<iterate property="cols" conjunction="," prepend=",">$cols[].name$</iterate>
     from ( select id from order_refund 
    <isParameterPresent >
      <include refid="order_refund.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
      limit #skip#,#pageSize#
    </isParameterPresent>
       ) bb inner join order_refund aa on aa.id=bb.id
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.OrderRefund" >
    select id, entity_id, order_id, refund_from, reason, op_user_id, status, create_time, op_time,
      last_ver, is_valid, ext, finish_time, sub_status, refund_code, max_refund_fee,
      apply_refund_fee, reason_type, apply_desc, reject_desc, pic_evidence, apply_user_id,
      timed_task_json, need_audit, refund_scene, order_from, order_kind, liquidated_damages_fee,
      waitingorder_id
    from order_refund
    where id = #id:VARCHAR#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.OrderRefund" >
    delete from order_refund
    where id = #id:VARCHAR#
  </delete>
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.OrderRefundCriteria" >
    delete from order_refund
    <include refid="order_refund.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.OrderRefund" >
    insert into order_refund (id, entity_id, order_id, refund_from, reason, op_user_id, status,
      create_time, op_time, last_ver, is_valid, ext, finish_time, sub_status, refund_code,
      max_refund_fee, apply_refund_fee, reason_type, apply_desc, reject_desc, pic_evidence,
      apply_user_id, timed_task_json, need_audit, refund_scene, order_from, order_kind,
      liquidated_damages_fee, waitingorder_id)
    values (#id:VARCHAR#, #entityId:VARCHAR#, #orderId:VARCHAR#, #refundFrom:TINYINT#,
      #reason:VARCHAR#, #opUserId:VARCHAR#, #status:TINYINT#, #createTime:BIGINT#, #opTime:BIGINT#,
      #lastVer:INTEGER#, #isValid:TINYINT#, #ext:VARCHAR#, #finishTime:BIGINT#, #subStatus:TINYINT#,
      #refundCode:VARCHAR#, #maxRefundFee:INTEGER#, #applyRefundFee:INTEGER#, #reasonType:TINYINT#,
      #applyDesc:VARCHAR#, #rejectDesc:VARCHAR#, #picEvidence:VARCHAR#, #applyUserId:VARCHAR#,
      #timedTaskJson:VARCHAR#, #needAudit:TINYINT#, #refundScene:SMALLINT#, #orderFrom:SMALLINT#,
      #orderKind:SMALLINT#, #liquidatedDamagesFee:INTEGER#, #waitingorderId:VARCHAR#)
  </insert>
  <insert id="ibatorgenerated_insertSelective" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.OrderRefund" >
    insert into order_refund
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        id
      </isNotNull>
      <isNotNull prepend="," property="entityId" >
        entity_id
      </isNotNull>
      <isNotNull prepend="," property="orderId" >
        order_id
      </isNotNull>
      <isNotNull prepend="," property="refundFrom" >
        refund_from
      </isNotNull>
      <isNotNull prepend="," property="reason" >
        reason
      </isNotNull>
      <isNotNull prepend="," property="opUserId" >
        op_user_id
      </isNotNull>
      <isNotNull prepend="," property="status" >
        status
      </isNotNull>
      <isNotNull prepend="," property="createTime" >
        create_time
      </isNotNull>
      <isNotNull prepend="," property="opTime" >
        op_time
      </isNotNull>
      <isNotNull prepend="," property="lastVer" >
        last_ver
      </isNotNull>
      <isNotNull prepend="," property="isValid" >
        is_valid
      </isNotNull>
      <isNotNull prepend="," property="ext" >
        ext
      </isNotNull>
      <isNotNull prepend="," property="finishTime" >
        finish_time
      </isNotNull>
      <isNotNull prepend="," property="subStatus" >
        sub_status
      </isNotNull>
      <isNotNull prepend="," property="refundCode" >
        refund_code
      </isNotNull>
      <isNotNull prepend="," property="maxRefundFee" >
        max_refund_fee
      </isNotNull>
      <isNotNull prepend="," property="applyRefundFee" >
        apply_refund_fee
      </isNotNull>
      <isNotNull prepend="," property="reasonType" >
        reason_type
      </isNotNull>
      <isNotNull prepend="," property="applyDesc" >
        apply_desc
      </isNotNull>
      <isNotNull prepend="," property="rejectDesc" >
        reject_desc
      </isNotNull>
      <isNotNull prepend="," property="picEvidence" >
        pic_evidence
      </isNotNull>
      <isNotNull prepend="," property="applyUserId" >
        apply_user_id
      </isNotNull>
      <isNotNull prepend="," property="timedTaskJson" >
        timed_task_json
      </isNotNull>
      <isNotNull prepend="," property="needAudit" >
        need_audit
      </isNotNull>
      <isNotNull prepend="," property="refundScene" >
        refund_scene
      </isNotNull>
      <isNotNull prepend="," property="orderFrom" >
        order_from
      </isNotNull>
      <isNotNull prepend="," property="orderKind" >
        order_kind
      </isNotNull>
      <isNotNull prepend="," property="liquidatedDamagesFee" >
        liquidated_damages_fee
      </isNotNull>
      <isNotNull prepend="," property="waitingorderId" >
        waitingorder_id
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        #id:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="entityId" >
        #entityId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="orderId" >
        #orderId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="refundFrom" >
        #refundFrom:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="reason" >
        #reason:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="opUserId" >
        #opUserId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="status" >
        #status:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="createTime" >
        #createTime:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="opTime" >
        #opTime:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="lastVer" >
        #lastVer:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="isValid" >
        #isValid:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="ext" >
        #ext:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="finishTime" >
        #finishTime:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="subStatus" >
        #subStatus:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="refundCode" >
        #refundCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="maxRefundFee" >
        #maxRefundFee:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="applyRefundFee" >
        #applyRefundFee:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="reasonType" >
        #reasonType:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="applyDesc" >
        #applyDesc:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="rejectDesc" >
        #rejectDesc:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="picEvidence" >
        #picEvidence:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="applyUserId" >
        #applyUserId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="timedTaskJson" >
        #timedTaskJson:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="needAudit" >
        #needAudit:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="refundScene" >
        #refundScene:SMALLINT#
      </isNotNull>
      <isNotNull prepend="," property="orderFrom" >
        #orderFrom:SMALLINT#
      </isNotNull>
      <isNotNull prepend="," property="orderKind" >
        #orderKind:SMALLINT#
      </isNotNull>
      <isNotNull prepend="," property="liquidatedDamagesFee" >
        #liquidatedDamagesFee:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="waitingorderId" >
        #waitingorderId:VARCHAR#
      </isNotNull>
      )
    </dynamic>
  </insert>
  <select id="ibatorgenerated_countByExample" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.OrderRefundCriteria" resultClass="java.lang.Integer" >
    select count(*) from order_refund
    <include refid="order_refund.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective" >
    update order_refund
    <dynamic prepend="set" >
      <isNotNull prepend="," property="record.id" >
        id = #record.id:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.entityId" >
        entity_id = #record.entityId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.orderId" >
        order_id = #record.orderId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.refundFrom" >
        refund_from = #record.refundFrom:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.reason" >
        reason = #record.reason:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.opUserId" >
        op_user_id = #record.opUserId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.status" >
        status = #record.status:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.createTime" >
        create_time = #record.createTime:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.opTime" >
        op_time = #record.opTime:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.lastVer" >
        last_ver = #record.lastVer:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.isValid" >
        is_valid = #record.isValid:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.ext" >
        ext = #record.ext:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.finishTime" >
        finish_time = #record.finishTime:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.subStatus" >
        sub_status = #record.subStatus:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.refundCode" >
        refund_code = #record.refundCode:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.maxRefundFee" >
        max_refund_fee = #record.maxRefundFee:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.applyRefundFee" >
        apply_refund_fee = #record.applyRefundFee:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.reasonType" >
        reason_type = #record.reasonType:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.applyDesc" >
        apply_desc = #record.applyDesc:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.rejectDesc" >
        reject_desc = #record.rejectDesc:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.picEvidence" >
        pic_evidence = #record.picEvidence:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.applyUserId" >
        apply_user_id = #record.applyUserId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.timedTaskJson" >
        timed_task_json = #record.timedTaskJson:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.needAudit" >
        need_audit = #record.needAudit:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.refundScene" >
        refund_scene = #record.refundScene:SMALLINT#
      </isNotNull>
      <isNotNull prepend="," property="record.orderFrom" >
        order_from = #record.orderFrom:SMALLINT#
      </isNotNull>
      <isNotNull prepend="," property="record.orderKind" >
        order_kind = #record.orderKind:SMALLINT#
      </isNotNull>
      <isNotNull prepend="," property="record.liquidatedDamagesFee" >
        liquidated_damages_fee = #record.liquidatedDamagesFee:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.waitingorderId" >
        waitingorder_id = #record.waitingorderId:VARCHAR#
      </isNotNull>
    </dynamic>
    <isParameterPresent >
      <include refid="order_refund.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample" >
    update order_refund
    set id = #record.id:VARCHAR#,
      entity_id = #record.entityId:VARCHAR#,
      order_id = #record.orderId:VARCHAR#,
      refund_from = #record.refundFrom:TINYINT#,
      reason = #record.reason:VARCHAR#,
      op_user_id = #record.opUserId:VARCHAR#,
      status = #record.status:TINYINT#,
      create_time = #record.createTime:BIGINT#,
      op_time = #record.opTime:BIGINT#,
      last_ver = #record.lastVer:INTEGER#,
      is_valid = #record.isValid:TINYINT#,
      ext = #record.ext:VARCHAR#,
      finish_time = #record.finishTime:BIGINT#,
      sub_status = #record.subStatus:TINYINT#,
      refund_code = #record.refundCode:VARCHAR#,
      max_refund_fee = #record.maxRefundFee:INTEGER#,
      apply_refund_fee = #record.applyRefundFee:INTEGER#,
      reason_type = #record.reasonType:TINYINT#,
      apply_desc = #record.applyDesc:VARCHAR#,
      reject_desc = #record.rejectDesc:VARCHAR#,
      pic_evidence = #record.picEvidence:VARCHAR#,
      apply_user_id = #record.applyUserId:VARCHAR#,
      timed_task_json = #record.timedTaskJson:VARCHAR#,
      need_audit = #record.needAudit:TINYINT#,
      refund_scene = #record.refundScene:SMALLINT#,
      order_from = #record.orderFrom:SMALLINT#,
      order_kind = #record.orderKind:SMALLINT#,
      liquidated_damages_fee = #record.liquidatedDamagesFee:INTEGER#,
      waitingorder_id = #record.waitingorderId:VARCHAR#
    <isParameterPresent >
      <include refid="order_refund.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
</sqlMap>