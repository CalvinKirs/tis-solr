<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="refund_pay_item" >
  <resultMap id="ibatorgenerated_BaseResultMap" class="com.qlangtech.tis.realtime.test.order.pojo.RefundPayItem" >
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="entity_id" property="entityId" jdbcType="VARCHAR" />
    <result column="order_refund_id" property="orderRefundId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="waiting_pay_id" property="waitingPayId" jdbcType="VARCHAR" />
    <result column="pay_id" property="payId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="finish_time" property="finishTime" jdbcType="BIGINT" />
    <result column="msg" property="msg" jdbcType="VARCHAR" />
    <result column="should_fee" property="shouldFee" jdbcType="INTEGER" />
    <result column="actual_fee" property="actualFee" jdbcType="INTEGER" />
    <result column="deduct_ratio" property="deductRatio" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="op_time" property="opTime" jdbcType="BIGINT" />
    <result column="last_ver" property="lastVer" jdbcType="INTEGER" />
    <result column="is_valid" property="isValid" jdbcType="TINYINT" />
    <result column="ext" property="ext" jdbcType="VARCHAR" />
    <result column="from_type" property="fromType" jdbcType="TINYINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="refund_way" property="refundWay" jdbcType="TINYINT" />
    <result column="rela_waiting_pay_id" property="relaWaitingPayId" jdbcType="VARCHAR" />
    <result column="kindpay_id" property="kindpayId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="ibatorgenerated_Example_Where_Clause" >
    <iterate property="oredCriteria" conjunction="or" prepend="where" removeFirstPrepend="iterate" >
      <isEqual property="oredCriteria[].valid" compareValue="true" >
        (
        <iterate prepend="and" property="oredCriteria[].criteriaWithoutValue" conjunction="and" >
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithSingleValue" conjunction="and" >
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithListValue" conjunction="and" >
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate property="oredCriteria[].criteriaWithListValue[].values" open="(" close=")" conjunction="," >
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate prepend="and" property="oredCriteria[].criteriaWithBetweenValue" conjunction="and" >
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="ibatorgenerated_selectByExample" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.RefundPayItemCriteria" >
    select aa.id AS identity_id, order_refund_id, order_id, waiting_pay_id, pay_id, status,
      finish_time, msg, should_fee, actual_fee, deduct_ratio, create_time, op_time, last_ver,
      is_valid, ext, from_type, type, refund_way, rela_waiting_pay_id, kindpay_id
     from ( select id from refund_pay_item 
    <isParameterPresent >
      <include refid="refund_pay_item.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
      limit #skip#,#pageSize#
    </isParameterPresent>
       ) bb inner join refund_pay_item aa on aa.id=bb.id
  </select>
  <select id="ibatorgenerated_selectTargetColsByExample" resultClass="com.qlangtech.tis.ibatis.RowMap" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.RefundPayItemCriteria" >
    select aa.id AS id
<iterate property="cols" conjunction="," prepend=",">$cols[].name$</iterate>
     from ( select id from refund_pay_item 
    <isParameterPresent >
      <include refid="refund_pay_item.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause" >
        order by $orderByClause$
      </isNotNull>
      limit #skip#,#pageSize#
    </isParameterPresent>
       ) bb inner join refund_pay_item aa on aa.id=bb.id
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" resultMap="ibatorgenerated_BaseResultMap" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.RefundPayItem" >
    select id, entity_id, order_refund_id, order_id, waiting_pay_id, pay_id, status, finish_time,
      msg, should_fee, actual_fee, deduct_ratio, create_time, op_time, last_ver, is_valid, ext,
      from_type, type, refund_way, rela_waiting_pay_id, kindpay_id
    from refund_pay_item
    where id = #id:VARCHAR#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.RefundPayItem" >
    delete from refund_pay_item
    where id = #id:VARCHAR#
  </delete>
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.RefundPayItemCriteria" >
    delete from refund_pay_item
    <include refid="refund_pay_item.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.RefundPayItem" >
    insert into refund_pay_item (id, entity_id, order_refund_id, order_id, waiting_pay_id, pay_id,
      status, finish_time, msg, should_fee, actual_fee, deduct_ratio, create_time, op_time,
      last_ver, is_valid, ext, from_type, type, refund_way, rela_waiting_pay_id, kindpay_id)
    values (#id:VARCHAR#, #entityId:VARCHAR#, #orderRefundId:VARCHAR#, #orderId:VARCHAR#,
      #waitingPayId:VARCHAR#, #payId:VARCHAR#, #status:TINYINT#, #finishTime:BIGINT#, #msg:VARCHAR#,
      #shouldFee:INTEGER#, #actualFee:INTEGER#, #deductRatio:DOUBLE#, #createTime:BIGINT#,
      #opTime:BIGINT#, #lastVer:INTEGER#, #isValid:TINYINT#, #ext:VARCHAR#, #fromType:TINYINT#,
      #type:INTEGER#, #refundWay:TINYINT#, #relaWaitingPayId:VARCHAR#, #kindpayId:VARCHAR#)
  </insert>
  <insert id="ibatorgenerated_insertSelective" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.RefundPayItem" >
    insert into refund_pay_item
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        id
      </isNotNull>
      <isNotNull prepend="," property="entityId" >
        entity_id
      </isNotNull>
      <isNotNull prepend="," property="orderRefundId" >
        order_refund_id
      </isNotNull>
      <isNotNull prepend="," property="orderId" >
        order_id
      </isNotNull>
      <isNotNull prepend="," property="waitingPayId" >
        waiting_pay_id
      </isNotNull>
      <isNotNull prepend="," property="payId" >
        pay_id
      </isNotNull>
      <isNotNull prepend="," property="status" >
        status
      </isNotNull>
      <isNotNull prepend="," property="finishTime" >
        finish_time
      </isNotNull>
      <isNotNull prepend="," property="msg" >
        msg
      </isNotNull>
      <isNotNull prepend="," property="shouldFee" >
        should_fee
      </isNotNull>
      <isNotNull prepend="," property="actualFee" >
        actual_fee
      </isNotNull>
      <isNotNull prepend="," property="deductRatio" >
        deduct_ratio
      </isNotNull>
      <isNotNull prepend="," property="createTime" >
        create_time
      </isNotNull>
      <isNotNull prepend="," property="opTime" >
        op_time
      </isNotNull>
      <isNotNull prepend="," property="lastVer" >
        last_ver
      </isNotNull>
      <isNotNull prepend="," property="isValid" >
        is_valid
      </isNotNull>
      <isNotNull prepend="," property="ext" >
        ext
      </isNotNull>
      <isNotNull prepend="," property="fromType" >
        from_type
      </isNotNull>
      <isNotNull prepend="," property="type" >
        type
      </isNotNull>
      <isNotNull prepend="," property="refundWay" >
        refund_way
      </isNotNull>
      <isNotNull prepend="," property="relaWaitingPayId" >
        rela_waiting_pay_id
      </isNotNull>
      <isNotNull prepend="," property="kindpayId" >
        kindpay_id
      </isNotNull>
      )
    </dynamic>
    values
    <dynamic prepend="(" >
      <isNotNull prepend="," property="id" >
        #id:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="entityId" >
        #entityId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="orderRefundId" >
        #orderRefundId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="orderId" >
        #orderId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="waitingPayId" >
        #waitingPayId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="payId" >
        #payId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="status" >
        #status:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="finishTime" >
        #finishTime:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="msg" >
        #msg:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="shouldFee" >
        #shouldFee:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="actualFee" >
        #actualFee:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="deductRatio" >
        #deductRatio:DOUBLE#
      </isNotNull>
      <isNotNull prepend="," property="createTime" >
        #createTime:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="opTime" >
        #opTime:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="lastVer" >
        #lastVer:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="isValid" >
        #isValid:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="ext" >
        #ext:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="fromType" >
        #fromType:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="type" >
        #type:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="refundWay" >
        #refundWay:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="relaWaitingPayId" >
        #relaWaitingPayId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="kindpayId" >
        #kindpayId:VARCHAR#
      </isNotNull>
      )
    </dynamic>
  </insert>
  <select id="ibatorgenerated_countByExample" parameterClass="com.qlangtech.tis.realtime.test.order.pojo.RefundPayItemCriteria" resultClass="java.lang.Integer" >
    select count(*) from refund_pay_item
    <include refid="refund_pay_item.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective" >
    update refund_pay_item
    <dynamic prepend="set" >
      <isNotNull prepend="," property="record.id" >
        id = #record.id:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.entityId" >
        entity_id = #record.entityId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.orderRefundId" >
        order_refund_id = #record.orderRefundId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.orderId" >
        order_id = #record.orderId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.waitingPayId" >
        waiting_pay_id = #record.waitingPayId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.payId" >
        pay_id = #record.payId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.status" >
        status = #record.status:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.finishTime" >
        finish_time = #record.finishTime:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.msg" >
        msg = #record.msg:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.shouldFee" >
        should_fee = #record.shouldFee:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.actualFee" >
        actual_fee = #record.actualFee:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.deductRatio" >
        deduct_ratio = #record.deductRatio:DOUBLE#
      </isNotNull>
      <isNotNull prepend="," property="record.createTime" >
        create_time = #record.createTime:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.opTime" >
        op_time = #record.opTime:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.lastVer" >
        last_ver = #record.lastVer:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.isValid" >
        is_valid = #record.isValid:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.ext" >
        ext = #record.ext:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.fromType" >
        from_type = #record.fromType:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.type" >
        type = #record.type:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.refundWay" >
        refund_way = #record.refundWay:TINYINT#
      </isNotNull>
      <isNotNull prepend="," property="record.relaWaitingPayId" >
        rela_waiting_pay_id = #record.relaWaitingPayId:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.kindpayId" >
        kindpay_id = #record.kindpayId:VARCHAR#
      </isNotNull>
    </dynamic>
    <isParameterPresent >
      <include refid="refund_pay_item.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample" >
    update refund_pay_item
    set id = #record.id:VARCHAR#,
      entity_id = #record.entityId:VARCHAR#,
      order_refund_id = #record.orderRefundId:VARCHAR#,
      order_id = #record.orderId:VARCHAR#,
      waiting_pay_id = #record.waitingPayId:VARCHAR#,
      pay_id = #record.payId:VARCHAR#,
      status = #record.status:TINYINT#,
      finish_time = #record.finishTime:BIGINT#,
      msg = #record.msg:VARCHAR#,
      should_fee = #record.shouldFee:INTEGER#,
      actual_fee = #record.actualFee:INTEGER#,
      deduct_ratio = #record.deductRatio:DOUBLE#,
      create_time = #record.createTime:BIGINT#,
      op_time = #record.opTime:BIGINT#,
      last_ver = #record.lastVer:INTEGER#,
      is_valid = #record.isValid:TINYINT#,
      ext = #record.ext:VARCHAR#,
      from_type = #record.fromType:TINYINT#,
      type = #record.type:INTEGER#,
      refund_way = #record.refundWay:TINYINT#,
      rela_waiting_pay_id = #record.relaWaitingPayId:VARCHAR#,
      kindpay_id = #record.kindpayId:VARCHAR#
    <isParameterPresent >
      <include refid="refund_pay_item.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
</sqlMap>